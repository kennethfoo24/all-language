# kubectl create namespace datadog
# kubectl create secret generic datadog-secret -n datadog --from-literal api-key=<DATADOG_API_KEY> --from-literal app-key=<DATADOG_APP_KEY>
# helm repo add datadog https://helm.datadoghq.com
# helm repo update
# helm install datadog datadog/datadog -n datadog -f values.yaml
# helm upgrade datadog datadog/datadog -n datadog -f values.yaml

# Datadog Agent with Logs, APM, Processes, and System Probe enabled

targetSystem: "linux"
datadog:
  # apiKey: <DATADOG_API_KEY>
  # appKey: <DATADOG_APP_KEY>
  apiKeyExistingSecret: datadog-secret
  appKeyExistingSecret: datadog-secret  
  ## The name must be unique and must be dot-separated tokens with the following restrictions:
  ## * Lowercase letters, numbers, and hyphens only.
  ## * Must start with a letter.
  ## * Must end with a number or a letter.
  ## * Overall length should not be higher than 80 characters.
  clusterName: test-cluster
  site: datadoghq.com
  logs:
    enabled: true
    containerCollectAll: true
    containerCollectUsingFiles: true
  apm:
    portEnabled: false    
    socketEnabled: true
    instrumentation:
      enabled: true
      targets:
        - name: "namespace" # This is just a metadata, can be any name
          namespaceSelector:
            matchNames:
              - "default" #this is the namespace of your choice, datadog will instrument all the services
          ddTraceVersions:
            java: "1"
            dotnet: "3"
            python: "2"
            js: "5"
            php: "1"
          ddTraceConfigs:
            - name: "DD_PROFILING_ENABLED"  ## profiling is enabled for all services in this namespace
              value: "true"
            - name: "DD_LOGS_INJECTION"
              value: "true"        
  processAgent:
    enabled: false
    processCollection: true
  networkMonitoring:
    enabled: false
  serviceMonitoring:
    enabled: false
  prometheusScrape:
    enabled: true
    serviceEndpoints: true             
